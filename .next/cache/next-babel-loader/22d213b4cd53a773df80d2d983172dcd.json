{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nick/Desktop/sculpture-site/components/SculpturesList.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport SculptureThumbnail from './SculptureThumbnail';\nimport SculptureData from '../sculpture_data.json';\nexport default class SculpturesList extends React.Component {\n  render() {\n    const {\n      forSale\n    } = this.props;\n    const data = Array(40).fill(SculptureData[0]).map(x => {\n      return _objectSpread({}, x, {\n        forSale: Math.random() > 0.5\n      });\n    });\n    return __jsx(\"div\", {\n      className: \"sculptures-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, data.filter(sculpture => sculpture.forSale === forSale).map((sculpture, i) => __jsx(SculptureThumbnail, {\n      key: i,\n      imageName: sculpture.name,\n      imageUrl: sculpture.images[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/nick/Desktop/sculpture-site/components/SculpturesList.tsx"],"names":["React","SculptureThumbnail","SculptureData","SculpturesList","Component","render","forSale","props","data","Array","fill","map","x","Math","random","filter","sculpture","i","name","images"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAMA,eAAe,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAAoD;AAC/DC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACA,UAAMC,IAAI,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAeR,aAAa,CAAC,CAAD,CAA5B,EAAiCS,GAAjC,CAAsCC,CAAD,IAAO;AACrD,+BAAWA,CAAX;AAAcN,QAAAA,OAAO,EAAEO,IAAI,CAACC,MAAL,KAAgB;AAAvC;AACH,KAFY,CAAb;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IAAI,CAACO,MAAL,CAAYC,SAAS,IAAIA,SAAS,CAACV,OAAV,KAAsBA,OAA/C,EACIK,GADJ,CACQ,CAACK,SAAD,EAAYC,CAAZ,KAAkB,MAAC,kBAAD;AAAoB,MAAA,GAAG,EAAEA,CAAzB;AACnB,MAAA,SAAS,EAAED,SAAS,CAACE,IADF;AAEnB,MAAA,QAAQ,EAAEF,SAAS,CAACG,MAAV,CAAiB,CAAjB,CAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,CADL,CADJ;AASH;;AAhB8D;AAiBlE","sourcesContent":["import React from 'react';\nimport SculptureThumbnail from './SculptureThumbnail';\nimport SculptureData from '../sculpture_data.json';\n\ninterface Props {\n    forSale: boolean;\n}\n\nexport default class SculpturesList extends React.Component<Props> {\n    render() {\n        const {forSale} = this.props;\n        const data = Array(40).fill(SculptureData[0]).map((x) => {\n            return {...x, forSale: Math.random() > 0.5}\n        });\n\n        return (\n            <div className=\"sculptures-list-container\">\n                {data.filter(sculpture => sculpture.forSale === forSale)\n                    .map((sculpture, i) => <SculptureThumbnail key={i}\n                        imageName={sculpture.name}\n                        imageUrl={sculpture.images[0]}\n                        />)}\n            </div>\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}