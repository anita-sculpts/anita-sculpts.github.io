{"ast":null,"code":"var _jsxFileName = \"/home/nick/Desktop/sculpture-site/components/Header.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default class Header extends React.Component {\n  render() {\n    const {\n      children,\n      addTopMargin,\n      color,\n      fontSize,\n      useSerif\n    } = this.props;\n    let style = {\n      marginTop: addTopMargin ? '0.5em' : '0em',\n      color: color !== null && color !== void 0 ? color : '$333',\n      fontFamily: useSerif ? \"'Judson', serif\" : \"'Roboto', sans-serif\"\n    };\n\n    if (typeof fontSize === 'string') {\n      style['fontSize'] = fontSize;\n    }\n\n    return __jsx(\"h1\", {\n      className: \"header\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n}","map":{"version":3,"sources":["/home/nick/Desktop/sculpture-site/components/Header.tsx"],"names":["React","Header","Component","render","children","addTopMargin","color","fontSize","useSerif","props","style","marginTop","fontFamily"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAA4C;AACvDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,YAAZ;AAA0BC,MAAAA,KAA1B;AAAiCC,MAAAA,QAAjC;AAA2CC,MAAAA;AAA3C,QAAwD,KAAKC,KAAnE;AACA,QAAIC,KAAU,GAAG;AACbC,MAAAA,SAAS,EAAEN,YAAY,GAAG,OAAH,GAAa,KADvB;AAEbC,MAAAA,KAAK,EAAEA,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW,MAFH;AAGbM,MAAAA,UAAU,EAAEJ,QAAQ,GAAG,iBAAH,GAAuB;AAH9B,KAAjB;;AAKA,QAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;AAC9BG,MAAAA,KAAK,CAAC,UAAD,CAAL,GAAoBH,QAApB;AACH;;AAED,WACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAEG,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,QADL,CADJ;AAKH;;AAjBsD","sourcesContent":["import React from 'react';\n\ninterface Props {\n    children: string;\n    addTopMargin?: boolean;\n    color?: string;\n    fontSize?: string;\n    useSerif?: boolean;\n}\n\nexport default class Header extends React.Component<Props> {\n    render() {\n        const { children, addTopMargin, color, fontSize, useSerif } = this.props;\n        let style: any = {\n            marginTop: addTopMargin ? '0.5em' : '0em',\n            color: color ?? '$333',\n            fontFamily: useSerif ? \"'Judson', serif\" : \"'Roboto', sans-serif\"\n        };\n        if (typeof fontSize === 'string') {\n            style['fontSize'] = fontSize;\n        }\n\n        return (\n            <h1 className=\"header\" style={style}>\n                {children}\n            </h1>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}