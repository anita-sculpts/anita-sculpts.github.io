{"ast":null,"code":"var _jsxFileName = \"/home/nick/Desktop/sculpture-site/pages/p/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport SculptureData from '../../sculpture_data.json';\nimport Header from '../../components/Header';\n\nvar SculpturePage = function SculpturePage() {\n  var router = useRouter();\n\n  if (router.query === {}) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  var currentSculptureName = router.query.id;\n  var currentSculpture;\n  var sculptures = [];\n  console.log(currentSculptureName);\n\n  if (currentSculptureName === '_forSale') {\n    sculptures = SculptureData.filter(function (sculpture) {\n      return sculpture.forSale === true;\n    });\n    currentSculpture = sculptures[0];\n  } else if (currentSculptureName === '_notForSale') {\n    sculptures = SculptureData.filter(function (sculpture) {\n      return sculpture.forSale === false;\n    });\n    currentSculpture = sculptures[0];\n  } else {\n    currentSculpture = SculptureData.filter(function (sculpture) {\n      return sculpture.name === router.query.id;\n    })[0];\n    sculptures = SculptureData.filter(function (sculpture) {\n      return sculpture.forSale === currentSculpture.forSale;\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: \"sculpture-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"sculpture-photo\",\n    src: currentSculpture.images[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, currentSculpture.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, currentSculpture.description));\n};\n\nexport default SculpturePage;","map":{"version":3,"sources":["/home/nick/Desktop/sculpture-site/pages/p/[id].tsx"],"names":["useRouter","SculptureData","Header","SculpturePage","router","query","currentSculptureName","id","currentSculpture","sculptures","console","log","filter","sculpture","forSale","name","images","description"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AASA,IAAMC,aAAuB,GAAG,SAA1BA,aAA0B,GAAM;AAClC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAEA,MAAII,MAAM,CAACC,KAAP,KAAiB,EAArB,EAAyB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,MAAIC,oBAAoB,GAAGF,MAAM,CAACC,KAAP,CAAaE,EAAxC;AACA,MAAIC,gBAAJ;AACA,MAAIC,UAAU,GAAG,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,oBAAZ;;AAEA,MAAIA,oBAAoB,KAAK,UAA7B,EAAyC;AACrCG,IAAAA,UAAU,GAAGR,aAAa,CAACW,MAAd,CAAqB,UAAAC,SAAS;AAAA,aAAIA,SAAS,CAACC,OAAV,KAAsB,IAA1B;AAAA,KAA9B,CAAb;AACAN,IAAAA,gBAAgB,GAAGC,UAAU,CAAC,CAAD,CAA7B;AACH,GAHD,MAGO,IAAIH,oBAAoB,KAAK,aAA7B,EAA4C;AAC/CG,IAAAA,UAAU,GAAGR,aAAa,CAACW,MAAd,CAAqB,UAAAC,SAAS;AAAA,aAAIA,SAAS,CAACC,OAAV,KAAsB,KAA1B;AAAA,KAA9B,CAAb;AACAN,IAAAA,gBAAgB,GAAGC,UAAU,CAAC,CAAD,CAA7B;AACH,GAHM,MAGA;AACHD,IAAAA,gBAAgB,GAAGP,aAAa,CAACW,MAAd,CAAqB,UAAAC,SAAS;AAAA,aAAIA,SAAS,CAACE,IAAV,KAAmBX,MAAM,CAACC,KAAP,CAAaE,EAApC;AAAA,KAA9B,EAAsE,CAAtE,CAAnB;AACAE,IAAAA,UAAU,GAAGR,aAAa,CAACW,MAAd,CAAqB,UAAAC,SAAS;AAAA,aAAIA,SAAS,CAACC,OAAV,KAAsBN,gBAAgB,CAACM,OAA3C;AAAA,KAA9B,CAAb;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAEN,gBAAgB,CAACQ,MAAjB,CAAwB,CAAxB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASR,gBAAgB,CAACO,IAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,gBAAgB,CAACS,WAArB,CAHJ,CADJ;AAOH,CA9BD;;AAgCA,eAAed,aAAf","sourcesContent":["import { NextPage } from 'next';\nimport { useRouter } from 'next/router';\n\nimport SculptureData from '../../sculpture_data.json';\n\nimport Header from '../../components/Header';\n\ntype Sculpture = {\n    name: string,\n    description: string,\n    forSale: boolean,\n    images: Array<string>\n}\n\nconst SculpturePage: NextPage = () => {\n    const router = useRouter();\n\n    if (router.query === {}) {\n        return <div />;\n    }\n\n    let currentSculptureName = router.query.id;\n    let currentSculpture: Sculpture;\n    let sculptures = [];\n    console.log(currentSculptureName);\n\n    if (currentSculptureName === '_forSale') {\n        sculptures = SculptureData.filter(sculpture => sculpture.forSale === true);\n        currentSculpture = sculptures[0];\n    } else if (currentSculptureName === '_notForSale') {\n        sculptures = SculptureData.filter(sculpture => sculpture.forSale === false);\n        currentSculpture = sculptures[0];\n    } else {\n        currentSculpture = SculptureData.filter(sculpture => sculpture.name === router.query.id)[0];\n        sculptures = SculptureData.filter(sculpture => sculpture.forSale === currentSculpture.forSale);\n    }\n    \n    return (\n        <div className='sculpture-container'>\n            <img className='sculpture-photo' src={currentSculpture.images[0]} />\n            <Header>{currentSculpture.name}</Header>\n            <p>{currentSculpture.description}</p>\n        </div>\n    );\n};\n\nexport default SculpturePage;"]},"metadata":{},"sourceType":"module"}